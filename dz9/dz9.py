#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
"""

import subprocess
import platform

def simple_traceroute_analysis():
    """–ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ traceroute"""
    system = platform.system()
    
    print("üåê –ü–†–û–°–¢–û–ô –ê–ù–ê–õ–ò–ó TRACEROUTE")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º —à–ª—é–∑
    if system == "Windows":
        result = subprocess.run(["ipconfig"], capture_output=True, text=True, encoding='cp866')
        for line in result.stdout.split('\n'):
            if "–û—Å–Ω–æ–≤–Ω–æ–π —à–ª—é–∑" in line or "Default Gateway" in line:
                gateway = line.split(":")[1].strip()
                if gateway:
                    print(f"üìç –®–ª—é–∑: {gateway}")
                    break
    else:
        result = subprocess.run(["ip", "route"], capture_output=True, text=True)
        for line in result.stdout.split('\n'):
            if "default" in line:
                gateway = line.split()[2]
                print(f"üìç –®–ª—é–∑: {gateway}")
                break
    
    # –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ —à–ª—é–∑–∞
    print("\n1. –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ —à–ª—é–∑–∞ (LAN):")
    if system == "Windows":
        subprocess.run(["tracert", "-d", gateway])
    else:
        subprocess.run(["traceroute", "-n", gateway])
    
    # –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
    print("\n2. –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ (MAN):")
    local_site = "yandex.ru"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞
    if system == "Windows":
        subprocess.run(["tracert", "-d", local_site])
    else:
        subprocess.run(["traceroute", "-n", local_site])
    
    # –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
    print("\n3. –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ (WAN):")
    global_site = "stanford.edu"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —Å–∞–π—Ç
    if system == "Windows":
        subprocess.run(["tracert", "-d", global_site])
    else:
        subprocess.run(["traceroute", "-n", global_site])

if __name__ == "__main__":
    simple_traceroute_analysis()